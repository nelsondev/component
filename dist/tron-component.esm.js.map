{"version":3,"file":"tron-component.esm.js","sources":["../src/utils/utils.js","../src/core/context.js","../src/core/component.js"],"sourcesContent":["export const camelToKebab = str => str.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase())\r\n\r\nexport const kebabToCamel = str => str.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase())\r\n\r\nexport const convertValue = (value, type) => {\r\n    if (value == null) return value;\r\n\r\n    if (type === Boolean) {\r\n        return value === '' || value === 'true' || value === true;\r\n    }\r\n    if (type === Number) {\r\n        const number = +value;\r\n        return isNaN(number) ? 0 : number;\r\n    }\r\n    if (type === Array || type === Object) {\r\n        if (typeof value === 'string') {\r\n            try {\r\n                return JSON.parse(value);\r\n            } catch {\r\n                return type === Array ? [] : {};\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n    return String(value);\r\n}","import { camelToKebab, convertValue } from \"../utils/utils\";\r\n\r\nexport function createContext(component) {\r\n    return {\r\n        /**\r\n         * Reference to the component element\r\n         */\r\n        element: component,\r\n\r\n        /**\r\n         * Define component properties with cleaner API\r\n         */\r\n        defineProps(propList = []) {\r\n            const properties = {};\r\n            const proxy = {};\r\n\r\n            component._propsCache = new Map();\r\n\r\n            propList.forEach(prop => {\r\n                const config = typeof prop === 'string'\r\n                    ? { name: prop, type: String, default: '' }\r\n                    : { type: String, default: '', ...prop };\r\n\r\n                properties[config.name] = config;\r\n            });\r\n\r\n            component.constructor.properties = properties;\r\n            component.constructor.observedAttributes = Object.keys(properties).map(camelToKebab);\r\n\r\n            Object.keys(properties).forEach(name => {\r\n                const config = properties[name];\r\n                const kebabName = camelToKebab(name);\r\n\r\n                Object.defineProperty(proxy, name, {\r\n                    get() {\r\n                        if (component._propsCache.has(name)) {\r\n                            return component._propsCache.get(name);\r\n                        }\r\n\r\n                        const attributeValue = component.getAttribute(kebabName);\r\n                        const value = attributeValue !== null\r\n                            ? convertValue(attributeValue, config.type)\r\n                            : config.default;\r\n\r\n                        if (config.required && value == null) {\r\n                            console.warn(`Required prop '${name}' is missing on ${component.tagName}`);\r\n                        }\r\n\r\n                        if (config.validator && !config.validator(value)) {\r\n                            console.warn(`Invalid prop '${name}' value:`, value);\r\n                        }\r\n\r\n                        component._propsCache.set(name, value);\r\n                        return value;\r\n                    },\r\n\r\n                    set(value) {\r\n                        if (config.validator && !config.validator(value)) {\r\n                            console.warn(`Invalid prop '${name}' value:`, value);\r\n                            return;\r\n                        }\r\n\r\n                        const convertedValue = convertValue(value, config.type);\r\n                        component.setAttribute(kebabName, convertedValue);\r\n                    }\r\n                });\r\n            });\r\n\r\n            component._props = proxy;\r\n            return proxy;\r\n        },\r\n\r\n        /**\r\n         * Create event handlers - returns a function that can be used in templates\r\n         */\r\n        defineEvent(handler) {\r\n            const name = `_evt${component._eventCounter++}`;\r\n            const globalName = `${component._instanceId}_${name}`;\r\n\r\n            component[name] = (...args) => handler(...args);\r\n            component._eventHandlers.add({ name, globalName });\r\n\r\n            // Store component reference globally using the unique global name\r\n            window[globalName] = component;\r\n\r\n            const eventWrapper = (...args) => component[name](...args);\r\n\r\n            eventWrapper.toString = () => {\r\n                const handlerString = handler.toString();\r\n                const paramMatch = handlerString.match(/^\\s*(?:async\\s+)?\\(?([^)]*)\\)?\\s*=>/);\r\n                const params = paramMatch ? paramMatch[1].trim() : '';\r\n\r\n                if (!params) {\r\n                    return `window.${globalName}.${name}()`;\r\n                }\r\n                if (params.includes(',')) {\r\n                    return `window.${globalName}.${name}(event)`;\r\n                }\r\n                return `(function(e){e.preventDefault();window.${globalName}.${name}(e)}).call(this,event)`;\r\n            };\r\n\r\n            return eventWrapper;\r\n        },\r\n\r\n        /**\r\n         * Export an event handler to make it available externally on the component\r\n         */\r\n        exportEvent(methodName, handler) {\r\n            const globalName = `${component._instanceId}_${methodName}`;\r\n\r\n            // Create the method on the component\r\n            component[methodName] = (...args) => {\r\n                if (typeof handler === 'function') {\r\n                    return handler(...args);\r\n                } else {\r\n                    // If handler is already a defineEvent result, call it\r\n                    return handler(...args);\r\n                }\r\n            };\r\n\r\n            // Track for cleanup\r\n            component._eventHandlers.add({ name: methodName, globalName });\r\n\r\n            // Store component reference globally\r\n            window[globalName] = component;\r\n\r\n            return component[methodName];\r\n        },\r\n\r\n        /**\r\n         * Define slots with cleaner API\r\n         */\r\n        defineSlots(slotNames = ['default']) {\r\n            const slots = {};\r\n\r\n            slotNames.forEach(slotName => {\r\n                Object.defineProperty(slots, slotName, {\r\n                    get() {\r\n                        // Process slots lazily when first accessed\r\n                        if (!component._slotsProcessed) {\r\n                            component._processSlots();\r\n                        }\r\n\r\n                        if (slotName === 'default') {\r\n                            return component._defaultSlotContent || '';\r\n                        }\r\n                        return component._namedSlots[slotName] || '';\r\n                    }\r\n                });\r\n            });\r\n\r\n            return slots;\r\n        },\r\n\r\n        /**\r\n         * Define component template with cleaner API\r\n         */\r\n        defineTemplate(template) {\r\n            const html = typeof template === 'function' ? template() : String(template);\r\n            component.innerHTML = html;\r\n        },\r\n\r\n        /**\r\n         * Forward classes from the component to its first child or specified selector\r\n         */\r\n        defineStyle() {\r\n            return component.className || '';\r\n        },\r\n\r\n        /**\r\n         * Lifecycle hooks\r\n         */\r\n        onMounted(callback) {\r\n            component.addEventListener('mounted', callback, { once: true });\r\n        },\r\n\r\n        onUnmounted(callback) {\r\n            component.addEventListener('unmounted', callback);\r\n        }\r\n    };\r\n}","import { createContext } from './context.js';\r\nimport { kebabToCamel } from '../utils/utils.js';\r\n\r\nconst registry = new Map();\r\n\r\nexport function defineComponent(tagName, definition) {\r\n    if (registry.has(tagName)) {\r\n        console.warn(`Component ${tagName} already registered`);\r\n        return registry.get(tagName);\r\n    }\r\n\r\n    class ColeComponent extends HTMLElement {\r\n        static properties = {};\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            // Initialize component state\r\n            this._eventHandlers = new Set();\r\n            this._eventListeners = new Set();\r\n            this._eventCounter = 0;\r\n            this._originalContent = null;\r\n            this._namedSlots = {};\r\n            this._defaultSlotContent = '';\r\n            this._slotsProcessed = false;\r\n\r\n            this._definition = definition;\r\n\r\n            // Create unique instance ID\r\n            this._instanceId = `cc_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\r\n        }\r\n\r\n        connectedCallback() {\r\n            // Capture content immediately when element is connected, before any nested components are upgraded\r\n            this._captureOriginalContent();\r\n            \r\n            // Process the component definition in the next tick to allow content capture\r\n            Promise.resolve().then(() => {\r\n                const context = createContext(this);\r\n                definition.call(context, context);\r\n                this.dispatchEvent(new CustomEvent('mounted'));\r\n            });\r\n        }\r\n\r\n        disconnectedCallback() {\r\n            // Clean up event listeners\r\n            this._eventListeners.forEach(({ element, type, handler }) => {\r\n                element.removeEventListener(type, handler);\r\n            });\r\n            this._eventListeners.clear();\r\n\r\n            // Clean up event handlers\r\n            this._eventHandlers.forEach(({ name, globalName }) => {\r\n                delete this[name];\r\n                delete window[globalName];\r\n            });\r\n            this._eventHandlers.clear();\r\n\r\n            this.dispatchEvent(new CustomEvent('unmounted'));\r\n        }\r\n\r\n        attributeChangedCallback(name, oldValue, newValue) {\r\n            if (oldValue !== newValue && this._propsCache) {\r\n                this._propsCache.delete(kebabToCamel(name));\r\n            }\r\n        }\r\n\r\n        render() {\r\n            // Clear all caches\r\n            if (this._propsCache) {\r\n                this._propsCache.clear();\r\n            }\r\n            \r\n            // Reset slot processing to force fresh slot extraction\r\n            this._slotsProcessed = false;\r\n            \r\n            // Re-capture original content (in case slot content changed)\r\n            this._captureOriginalContent();\r\n            \r\n            // Re-run the component definition with fresh context\r\n            const context = createContext(this);\r\n            this._definition.call(context, context);\r\n            \r\n            // Dispatch event for any cleanup/update logic\r\n            this.dispatchEvent(new CustomEvent('rerendered', { \r\n                detail: { timestamp: Date.now() }\r\n            }));\r\n        }\r\n\r\n        _captureOriginalContent() {\r\n            // Capture the innerHTML immediately - this should contain the original, unprocesed content\r\n            this._originalContent = this.innerHTML;\r\n            \r\n            // Create a map to store content by element reference\r\n            const elementContentMap = new Map();\r\n            \r\n            // Also capture text content of any nested custom elements to preserve their slot content\r\n            const nestedCustomElements = this.querySelectorAll('*');\r\n            nestedCustomElements.forEach(element => {\r\n                const tagName = element.tagName.toLowerCase();\r\n                if (tagName.includes('-') && !element._originalContentCaptured) {\r\n                    // Store the original content mapped to the specific element\r\n                    elementContentMap.set(element, element.innerHTML);\r\n                    element._preservedSlotContent = element.innerHTML;\r\n                    element._originalContentCaptured = true;\r\n                }\r\n            });\r\n            \r\n            // Store the map on this component instance for later use\r\n            this._elementContentMap = elementContentMap;\r\n        }\r\n\r\n        _processSlots() {\r\n            // Only process slots once\r\n            if (this._slotsProcessed) return;\r\n            \r\n            this._extractSlots();\r\n            this._slotsProcessed = true;\r\n        }\r\n\r\n        _extractSlots() {\r\n            if (!this._originalContent) {\r\n                this._namedSlots = {};\r\n                this._defaultSlotContent = '';\r\n                return;\r\n            }\r\n\r\n            // Create a temporary container to safely parse HTML\r\n            const tempDiv = document.createElement('div');\r\n            tempDiv.innerHTML = this._originalContent;\r\n\r\n            // Restore preserved content for any nested custom elements using the stored map\r\n            if (this._elementContentMap) {\r\n                const nestedElements = tempDiv.querySelectorAll('*');\r\n                const realNestedElements = Array.from(this.querySelectorAll('*'));\r\n                \r\n                nestedElements.forEach((element, index) => {\r\n                    const tagName = element.tagName.toLowerCase();\r\n                    if (tagName.includes('-')) {\r\n                        // Match by index within the same tag type to maintain correspondence\r\n                        const realElement = realNestedElements[index];\r\n                        if (realElement && this._elementContentMap.has(realElement)) {\r\n                            element.innerHTML = this._elementContentMap.get(realElement);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Only process slots that are direct children (not nested in other custom elements)\r\n            const namedSlots = {};\r\n            \r\n            // Get direct child template elements with slot attribute\r\n            const directTemplateElements = Array.from(tempDiv.children).filter(child => \r\n                child.tagName === 'TEMPLATE' && child.hasAttribute('slot')\r\n            );\r\n            \r\n            directTemplateElements.forEach(template => {\r\n                const slotName = template.getAttribute('slot');\r\n                namedSlots[slotName] = template.innerHTML;\r\n                template.remove();\r\n            });\r\n\r\n            // Get direct child elements with slot attribute (legacy support)\r\n            const directSlotElements = Array.from(tempDiv.children).filter(child => \r\n                child.hasAttribute('slot') && child.tagName !== 'TEMPLATE'\r\n            );\r\n            \r\n            directSlotElements.forEach(el => {\r\n                const slotName = el.getAttribute('slot');\r\n                if (!namedSlots[slotName]) {\r\n                    namedSlots[slotName] = el.outerHTML;\r\n                }\r\n                el.remove();\r\n            });\r\n\r\n            this._namedSlots = namedSlots;\r\n            \r\n            // Everything remaining is default slot content\r\n            this._defaultSlotContent = tempDiv.innerHTML.trim();\r\n        }\r\n    }\r\n\r\n    customElements.define(tagName, ColeComponent);\r\n    registry.set(tagName, ColeComponent);\r\n    return ColeComponent;\r\n}"],"names":[],"mappings":"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"}